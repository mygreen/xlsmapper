############################################################
# XlsMapperのメッセージファイル
############################################################

cellContext=[{sheetName}]${empty label ? '' : ':' + label} - セル({cellAddress})

#################################
## 型変換のエラーメッセージ
#################################
cellTypeMismatch={cellContext}の値'{validatedValue}'の型変換に失敗しました。
cellTypeMismatch.java.lang.Enum={cellContext}の値'{validatedValue}'は、何れかの値[${f:join(enums, ', ')}]で設定してください。

cellTypeMismatch.boolean={cellContext}の値'{validatedValue}'は、trueの値[${f:join(trueValues, ', ')}]、またはfalseの値[${f:join(falseValues, ', ')}]の何れかの値で設定してください。
cellTypeMismatch.java.lang.Boolean={cellTypeMismatch.boolean}

cellTypeMismatch.byte={cellContext}の値'{validatedValue}'は、整数(byte型)で設定してください。${empty(javaPattern) ? '' : '書式は' + javaPattern  + 'で設定してください。'}
cellTypeMismatch.java.lang.Byte={cellTypeMismatch.byte}

cellTypeMismatch.short={cellContext}の値'{validatedValue}'は、整数(short型)で設定してください。${empty(javaPattern) ? '' : '書式は' + javaPattern  + 'で設定してください。'}
cellTypeMismatch.java.lang.Short={cellTypeMismatch.short}

cellTypeMismatch.int={cellContext}の値'{validatedValue}'は、整数(int型)で設定してください。${empty(javaPattern) ? '' : '書式は' + javaPattern  + 'で設定してください。'}
cellTypeMismatch.java.lang.Integer={cellTypeMismatch.int}

cellTypeMismatch.long={cellContext}の値'{validatedValue}'は、整数(long型)で設定してください。${empty(javaPattern) ? '' : '書式は' + javaPattern  + 'で設定してください。'}
cellTypeMismatch.java.lang.Long={cellTypeMismatch.long}

cellTypeMismatch.float={cellContext}の値'{validatedValue}'は、小数(float型)で設定してください。${empty(javaPattern) ? '' : '書式は' + javaPattern  + 'で設定してください。'}
cellTypeMismatch.java.lang.Float={cellTypeMismatch.float}

cellTypeMismatch.double={cellContext}の値'{validatedValue}'は、小数(double型)で設定してください。${empty(javaPattern) ? '' : '書式は' + javaPattern  + 'で設定してください。'}
cellTypeMismatch.java.lang.Double={cellTypeMismatch.double}

cellTypeMismatch.java.math.BigDecimal={cellContext}の値'{validatedValue}'は、小数(BigDecimal型)で設定してください。
cellTypeMismatch.java.math.BigInteger={cellContext}の値'{validatedValue}'は、整数(BigInteger型)で設定してください。

cellTypeMismatch.java.util.Date={cellContext}の値'{validatedValue}'は、'{javaPattern}'の日時形式で設定してください。
cellTypeMismatch.java.util.Calendar={cellContext}の値'{validatedValue}'は、'{javaPattern}'の日時形式で設定してください。
cellTypeMismatch.java.sql.Date={cellContext}の値'{validatedValue}'は、'{javaPattern}'の日付形式で設定してください。
cellTypeMismatch.java.sql.Time={cellContext}の値'{validatedValue}'は、'{javaPattern}'の時刻形式で設定してください。
cellTypeMismatch.java.sql.Timestamp={cellContext}の値'{validatedValue}'は、'{javaPattern}'のタイムスタンプ形式で設定してください。

cellTypeMismatch.java.time.LocalDate={cellContext}の値'{validatedValue}'は、'{javaPattern}'の日付形式で設定してください。
cellTypeMismatch.java.time.LocalTime={cellContext}の値'{validatedValue}'は、'{javaPattern}'の時刻形式で設定してください。
cellTypeMismatch.java.time.LocalDateTime={cellContext}の値'{validatedValue}'は、'{javaPattern}'の日時形式で設定してください。

cellTypeMismatch.java.util.List={cellContext}の値'{validatedValue}'は、配列の形式に変換できません。
cellTypeMismatch.java.util.Set={cellTypeMismatch.java.util.List}
cellTypeMismatch.java.util.Collection={cellTypeMismatch.java.util.List}
cellTypeMismatch.java.lang.Object[]={cellTypeMismatch.java.util.List}

cellTypeMismatch.java.net.URI={cellContext}の値'{validatedValue}'は、URI(Uniform Resource Identifier)の形式として不正です。

#######################################
## フィールドエラーのメッセージ
#######################################
cellFieldError.required={cellContext}の値は必須です。
cellFieldError.max={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、'${empty(fieldFormatter) ? max : fieldFormatter.format(max)}'${inclusive == true ? '以下の' : 'より小さい'}値を設定してください。
cellFieldError.min={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、'${empty(fieldFormatter) ? min : fieldFormatter.format(min)}'${inclusive == true ? '以上の' : 'より大きい'}値を設定してください。
cellFieldError.range={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、'${empty(fieldFormatter) ? min : fieldFormatter.format(min)}'${inclusive == true ? '以上' : 'より大きく'}、'${empty(fieldFormatter) ? max : fieldFormatter.format(max)}'${inclusive == true ? '以下の' : 'より小さい'}値を設定してください。
cellFieldError.lengthMax={cellContext}の文字長'{length}'は、{max}文字以内で値を設定してください。
cellFieldError.lengthMin={cellContext}の文字長'{length}'は、{min}文字以上で値を設定してください。
cellFieldError.lengthBetween={cellContext}の文字長'{length}'は、{min}～{max}文字以内で値を入設定してください。
cellFieldError.lengthExact={cellContext}の文字長'{length}'は、[${f:join(requiredLengths, ', ')}]文字${size(requiredLengths) == 1 ? '' : 'の何れか'}でなければなりません。
cellFieldError.pattern={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、'${empty(description) ? pattern : description}'に一致していません。

cellFieldError.max.java.util.Date={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、'${empty(fieldFormatter) ? max : fieldFormatter.format(max)}'${inclusive == true ? '以前の' : 'より前の'}日時を設定してください。
cellFieldError.min.java.util.Date={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、'${empty(fieldFormatter) ? min : fieldFormatter.format(min)}'${inclusive == true ? '以降の' : 'より後の'}日時を設定してください。
cellFieldError.range.java.util.Date={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、'${empty(fieldFormatter) ? min : fieldFormatter.format(min)}'${inclusive == true ? '以降' : 'より後'}から'${empty(fieldFormatter) ? max : fieldFormatter.format(max)}'${inclusive == true ? '以前の' : 'より前の'}日時を設定してください。

cellFieldError.max.java.sql.Date={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、'${empty(fieldFormatter) ? max : fieldFormatter.format(max)}'${inclusive == true ? '以前の' : 'より前の'}日付を設定してください。
cellFieldError.min.java.sql.Date={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、'${empty(fieldFormatter) ? min : fieldFormatter.format(min)}'${inclusive == true ? '以降の' : 'より後の'}日付を設定してください。
cellFieldError.range.java.sql.Date={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、'${empty(fieldFormatter) ? min : fieldFormatter.format(min)}'${inclusive == true ? '以降' : 'より後'}から'${empty(fieldFormatter) ? max : fieldFormatter.format(max)}'${inclusive == true ? '以前の' : 'より前の'}日付を設定してください。

cellFieldError.max.java.sql.Time={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、'${empty(fieldFormatter) ? max : fieldFormatter.format(max)}'${inclusive == true ? '以前の' : 'より前の'}時間を設定してください。
cellFieldError.min.java.sql.Time={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、'${empty(fieldFormatter) ? min : fieldFormatter.format(min)}'${inclusive == true ? '以降の' : 'より後の'}時間を設定してください。
cellFieldError.range.java.sql.Time={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、'${empty(fieldFormatter) ? min : fieldFormatter.format(min)}'${inclusive == true ? '以降' : 'より後'}から'${empty(fieldFormatter) ? max : fieldFormatter.format(max)}'${inclusive == true ? '以前の' : 'より前の'}時間を設定してください。

cellFieldError.max.java.sql.Timestamp={cellFieldError.max.java.util.Date}
cellFieldError.min.java.sql.Timestamp={cellFieldError.min.java.util.Date}
cellFieldError.range.java.sql.Timestamp={cellFieldError.range.java.util.Date}

cellFieldError.max.java.time.LocalDateTime={cellFieldError.max.java.util.Date}
cellFieldError.min.java.time.LocalDateTime={cellFieldError.min.java.util.Date}
cellFieldError.range.java.time.LocalDateTime={cellFieldError.range.java.util.Date}

cellFieldError.max.java.time.LocalDate={cellFieldError.max.java.sql.Date}
cellFieldError.min.java.time.LocalDate={cellFieldError.min.java.sql.Date}
cellFieldError.range.java.time.LocalDate={cellFieldError.range.java.sql.Date}

cellFieldError.max.java.time.LocalTime={cellFieldError.max.java.sql.Time}
cellFieldError.min.java.time.LocalTime={cellFieldError.min.java.sql.Time}
cellFieldError.range.java.time.LocalTime={cellFieldError.range.java.sql.Time}

cellFieldError.arraySize={cellContext}の要素数'{size}'は、{min}～{max}個以内で値を設定してください。

#######################################
## BeanValidationのメッセージ
#######################################
## JSR-303/310((BeanValidation 1.0/1.1)のエラーメッセージ
javax.validation.constraints.AssertFalse.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、falseを設定してください。
javax.validation.constraints.AssertTrue.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、trueを設定してください。
javax.validation.constraints.DecimalMax.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、{value}${inclusive == true ? '以下の' : 'より小さい'}値を設定してください。
javax.validation.constraints.DecimalMin.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、{value}${inclusive == true ? '以上の' : 'より大きい'}値を設定してください。
javax.validation.constraints.Digits.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、整数{integer}桁以内、小数{fraction}桁以内で設定してください。
javax.validation.constraints.Future.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、未来の日付を設定してください。
javax.validation.constraints.Past.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、過去の日付を設定してください。
javax.validation.constraints.Max.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、{value}より同じか小さい値を設定してください。
javax.validation.constraints.Min.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、{value}より同じか大きい値を設定してください。
javax.validation.constraints.NotNull.message={cellContext}の値は必須です。
javax.validation.constraints.Null.message={cellContext}の値は未設定でなければいけません。
javax.validation.constraints.Pattern.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、正規表現「{regexp}」に一致していません。
javax.validation.constraints.Size.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、{min}から{max}の間の値を設定してください。

## JSR-380(BeanValidation 2.0)のメッセージ
javax.validation.constraints.NotEmpty.message={cellContext}の値は必須です。
javax.validation.constraints.NotBlank.message={cellContext}の値は必須です。
javax.validation.constraints.FutureOrPresent.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、現在以降の未来の日付を設定してください。
javax.validation.constraints.PastOrPresent.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、現在以前の過去の日付を設定してください。
javax.validation.constraints.Negative.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、0以下の値を設定してください。
javax.validation.constraints.NegativeOrZero.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、0以下の値を設定してください。
javax.validation.constraints.Positive.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、0より大きい値を設定してください。
javax.validation.constraints.PositiveOrZero.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、0以上の値を設定してください。
javax.validation.constraints.Email.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、E-mail形式で設定してください。


## Hibernate Validatorのエラーメッセージ
org.hibernate.validator.constraints.CreditCardNumber.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、不正なクレジットカードの番号です。
org.hibernate.validator.constraints.EAN.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、不正な{type}のコードです。
org.hibernate.validator.constraints.Email.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、E-mail形式で設定してください。
org.hibernate.validator.constraints.Length.message={cellContext}の文字長'${validatedValue.length()}'は、{min}～{max}の間で設定してください。
org.hibernate.validator.constraints.LuhnCheck.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、Luhn Module 10 チェックサムの値が不正です。
org.hibernate.validator.constraints.Mod10Check.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、Module 10 チェックサムの値が不正です。
org.hibernate.validator.constraints.Mod11Check.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、Luhn Module 11 チェックサムの値が不正です。
org.hibernate.validator.constraints.ModCheck.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、${modType} チェックサムの値が不正です。
org.hibernate.validator.constraints.NotBlank.message={cellContext}の値は必須です。
org.hibernate.validator.constraints.NotEmpty.message={cellContext}の値は必須です。
org.hibernate.validator.constraints.ParametersScriptAssert.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、スクリプトの式"{script}"がtrueを返しませんでした。
org.hibernate.validator.constraints.Range.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、{min}から{max}の間の値を設定してください。
org.hibernate.validator.constraints.SafeHtml.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、スクリプトを含んでいる安全でない可能性があります。
org.hibernate.validator.constraints.ScriptAssert.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、スクリプトの式"{script}"がtrueを返しませんでした。
org.hibernate.validator.constraints.URL.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、不正なURLの形式です。

org.hibernate.validator.constraints.br.CNPJ.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、法人税金支払番号（CNPJ）として不正な書式です。
org.hibernate.validator.constraints.br.CPF.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、個人税金支払い番号（CPF）として不正な書式です。
org.hibernate.validator.constraints.br.TituloEleitor.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、IDカードとして不正な書式です。

org.hibernate.validator.constraints.Currency.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、通貨({value})として不正です。

org.hibernate.validator.constraints.pl.REGON.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、ポーランド納税者身分証番号(REGON)として不正な書式です。
org.hibernate.validator.constraints.pl.NIP.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、VAT身分証番号(NIP)として不正な書式です。
org.hibernate.validator.constraints.pl.PESEL.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、 ポーランド国際身分証番号(PESEL)として不正な書式です。

# Hibernate Validator 6.0のエラーメッセージ
org.hibernate.validator.constraints.time.DurationMax.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、${days == 0 ? '' : days == 1 ? ' 1 day' : days += '日'}${hours == 0 ? '' : hours == 1 ? ' 1 hour' : ' ' += hours += '時'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minute' : ' ' += minutes += ' 分'}${seconds == 0 ? '' : seconds == 1 ? ' 1 second' : ' ' += seconds += ' 秒'}${millis == 0 ? '' : millis == 1 ? ' 1 milli' : ' ' += millis += ' ミリ秒'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nano' : ' ' += nanos += ' ナノ秒'} ${inclusive == true ? ' 以前' : 'より前'}を設定してください。
org.hibernate.validator.constraints.time.DurationMin.message={cellContext}の値'${empty(fieldFormatter) ? validatedValue : fieldFormatter.format(validatedValue)}'は、${days == 0 ? '' : days == 1 ? ' 1 day' : days += '日'}${hours == 0 ? '' : hours == 1 ? ' 1 hour' : ' ' += hours += '時'}${minutes == 0 ? '' : minutes == 1 ? ' 1 minute' : ' ' += minutes += ' 分'}${seconds == 0 ? '' : seconds == 1 ? ' 1 second' : ' ' += seconds += ' 秒'}${millis == 0 ? '' : millis == 1 ? ' 1 milli' : ' ' += millis += ' ミリ秒'}${nanos == 0 ? '' : nanos == 1 ? ' 1 nano' : ' ' += nanos += ' ナノ秒'} ${inclusive == true ? ' 以降' : 'より後'}を設定してください。

